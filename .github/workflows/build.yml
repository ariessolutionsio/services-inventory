name: Build & Deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      

env:
  SERVICE_NAME: service-inventory
  ORG: ${{ github.repository_owner }}

# permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "maven"
      
      - name: Exclude pom format issues 
        run : mvn tidy:pom

      - name: Build with Maven
        run: mvn clean install -s maven-settings.xml
        env:
          CT_PROJECT_KEY: ${{ vars.BUILD_CT_PROJECT }}
          CT_CLIENT_ID: ${{ secrets.BUILD_CT_CLIENT_ID }}
          CT_CLIENT_SECRET: ${{ secrets.BUILD_CT_CLIENT_SECRET }}
          CT_API_URL: ${{ vars.BUILD_CT_API_URL }}
          CT_AUTH_URL: ${{ vars.BUILD_CT_AUTH_URL }}
          CT_PROJECT_SCOPES: ${{ vars.BUILD_CT_SCOPES }}
          GITHUB_TOKEN: ${{ secrets.GA_PAT_MAVEN_REPO }}

      # Verify against a "build" CT project, typically dev
      - name: Run tests, build OpenAPI spec
        run: mvn verify
        env:
          CT_PROJECT_KEY: ${{ vars.BUILD_CT_PROJECT }}
          CT_CLIENT_ID: ${{ secrets.BUILD_CT_CLIENT_ID }}
          CT_CLIENT_SECRET: ${{ secrets.BUILD_CT_CLIENT_SECRET }}
          CT_API_URL: ${{ vars.BUILD_CT_API_URL }}
          CT_AUTH_URL: ${{ vars.BUILD_CT_AUTH_URL }}
          CT_PROJECT_SCOPES: ${{ vars.BUILD_CT_SCOPES }}

      # Save open api spec as artifact
      - name: Archive OpenAPI spec
        uses: actions/upload-artifact@v3
        with:
          name: api-spec
          path: target/openapi.json

# add commit msg 
      # - name: Sleep for 180 seconds
      #   run: sleep 180s
      #   shell: bash
  
      # - uses: actions/setup-node@v2
      #   with: 
      #       node-version: "18"

      # - name: "Install newman"
      #   run: "npm install -g newman"

      # - name: "Install newman reporter"
      #   run: "npm install -g newman-reporter-htmlextra"

      # - name: "post man collection execution"
      #   run: "newman run postman-collections/cart-session.postman_collection.json -e postman-collections/aries_gateway.postman_environment.json -r htmlextra --reporter-htmlextra-export postman_report.html"
      
      # - name: post man collection execution report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     path: postman_report.html

      # - name: Slack Notification
      #   if: '${{ failure() }}'
      #   env:
      #     SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL }}'
      #   uses: act10ns/slack@v1
      #   with:
      #     status: '${{ job.status }}'
      #     channel: '#api-builderrors'
      #     message: |-
      #       Workflow Name: ${{ github.workflow }}
      #       Status: ${{ job.status }}
      #       Repository: ${{ github.repository }}
      #       Commit: ${{ github.sha }}
