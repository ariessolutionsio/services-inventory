name: wif-ci

on:
  push:
    branches:
      - 'main'
jobs:
  build:
    name: "Test WIF"
    runs-on: ubuntu-latest
    timeout-minutes: 90
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          token_format: "access_token"
          create_credentials_file: true
          activate_credentials_file: true
          workload_identity_provider: 'projects/1075624678739/locations/global/workloadIdentityPools/github-identity-pool-dev/providers/github'
          service_account: 'spanner-dev-access@accelerator-386214.iam.gserviceaccount.com'
          access_token_lifetime: '100s'
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
      - name: set crdential_file
        run: gcloud auth login --cred-file=${{steps.auth.outputs.credentials_file_path}}
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          cache: "maven"
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn clean install
        env:
          CT_PROJECT_KEY: ${{ vars.BUILD_CT_PROJECT_KEY }}
          CT_CLIENT_ID: ${{ secrets.BUILD_CT_CLIENT_ID }}
          CT_CLIENT_SECRET: ${{ secrets.BUILD_CT_CLIENT_SECRET }}
          CT_API_URL: ${{ vars.BUILD_CT_API_URL }}
          CT_AUTH_URL: ${{ vars.BUILD_CT_AUTH_URL }}
          CT_PROJECT_SCOPES: ${{ vars.BUILD_CT_SCOPES }}
      # Verify against a "build" CT project, typically dev
      - name: Run tests, build OpenAPI spec
        run: mvn verify
        env:
          CT_PROJECT_KEY: ${{ vars.BUILD_CT_PROJECT_KEY }}
          CT_CLIENT_ID: ${{ secrets.BUILD_CT_CLIENT_ID }}
          CT_CLIENT_SECRET: ${{ secrets.BUILD_CT_CLIENT_SECRET }}
          CT_API_URL: ${{ vars.BUILD_CT_API_URL }}
          CT_AUTH_URL: ${{ vars.BUILD_CT_AUTH_URL }}
          CT_PROJECT_SCOPES: ${{ vars.BUILD_CT_SCOPES }}
      # Save open api spec as artifact
      - name: Archive OpenAPI spec
        uses: actions/upload-artifact@v3
        with:
          name: api-spec
          path: target/openapi.json
#      - name: Run gcloud
#        run: gcloud compute instances list --zones us-east4-c

